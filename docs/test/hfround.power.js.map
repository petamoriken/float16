{
  "version": 3,
  "sources": [
    "test/hfround.js"
  ],
  "names": [
    "_PowerAssertRecorder1",
    "PowerAssertRecorder",
    "captured",
    "prototype",
    "_capt",
    "value",
    "espath",
    "push",
    "_expr",
    "source",
    "capturedValues",
    "powerAssertContext",
    "events",
    "maxFloat16",
    "minFloat16",
    "isPlusZero",
    "num",
    "Infinity",
    "isMinusZero",
    "describe",
    "it",
    "_rec1",
    "assert",
    "hfround",
    "name",
    "content",
    "filepath",
    "line",
    "_rec2",
    "length",
    "_rec3",
    "_rec4",
    "_rec5",
    "Number",
    "isNaN",
    "undefined",
    "NaN",
    "_rec6",
    "_rec7",
    "_rec8",
    "_rec9",
    "_rec10",
    "_rec11",
    "_rec12",
    "MAX_VALUE",
    "_rec13",
    "_rec14",
    "MIN_VALUE",
    "_rec15",
    "_rec16",
    "_rec17",
    "_rec18",
    "_rec19",
    "_rec20",
    "_rec21",
    "_rec22",
    "_rec23",
    "_rec24"
  ],
  "mappings": "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",
  "sourceRoot": "/Users/moriken/Sites/float16",
  "sourcesContent": [
    "(function() {\n\nconst maxFloat16 = 65504;\nconst minFloat16 = 2 ** -24;\n\nfunction isPlusZero(num) {\n    return num === 0 && 1 / num === Infinity;\n}\n\nfunction isMinusZero(num) {\n    return num === 0 && 1 / num === -Infinity;\n}\n\n\ndescribe(\"hfround()\", () => {\n\n    it(\"property `name` is 'hfround'\", () => {\n        assert( hfround.name === \"hfround\" );\n    });\n\n    it(\"property `length` is 1\", () => {\n        assert( hfround.length === 1 );\n    });\n\n    it(\"return NaN when value is empty or undefined or NaN\", () => {\n        assert( Number.isNaN( hfround() ) );\n        assert( Number.isNaN( hfround(undefined) ) );\n        assert( Number.isNaN( hfround(NaN) ) );\n    });\n\n    it(\"return 0 when value is 0 or null\", () => {\n        assert( isPlusZero( hfround(0) ) );\n        assert( isPlusZero( hfround(null) ) );\n    });\n\n    it(\"return -0 when value is -0\", () => {\n        assert( isMinusZero( hfround(-0) ) );\n    });\n\n    it(\"return ±Infinity when value is ±Infinity\", () => {\n        assert( hfround(Infinity) === Infinity );\n        assert( hfround(-Infinity) === -Infinity );\n    });\n\n    it(\"return ±Infinity when value is ±Number.MAX_VALUE\", () => {\n        assert( hfround(Number.MAX_VALUE) === Infinity );\n        assert( hfround(-Number.MAX_VALUE) === -Infinity );\n    });\n\n    it(\"return ±0 when value is ±Number.MIN_VALUE\", () => {\n        assert( isPlusZero( hfround(Number.MIN_VALUE) ) );\n        assert( isMinusZero( hfround(-Number.MIN_VALUE) ) );\n    });\n\n    it(\"return same value when value is ±float16 max/min value\", () => {\n        assert( hfround(maxFloat16) === maxFloat16 );\n        assert( hfround(-maxFloat16) === -maxFloat16 );\n        assert( hfround(minFloat16) === minFloat16 );\n        assert( hfround(-minFloat16) === -minFloat16 );\n    });\n\n    it(\"return same value when value is float16 max value + a bit number\", () => {\n        assert( hfround(maxFloat16 + 2 ** (2 ** (5 - 1) - 1 - 10 - 2)) === maxFloat16 );\n    });\n\n    it(\"return 0 when value is ±float16 min value / 2\", () => {\n        assert( isPlusZero( hfround(minFloat16 / 2) ) );\n        assert( isMinusZero( hfround(-minFloat16 / 2) ) );\n    });\n\n    it(\"return ±float16 min value when value is ±float16 min value / 2 ± a bit number\", () => {\n        assert( hfround(minFloat16 / 2 + 2 ** -25) === minFloat16 );\n        assert( hfround(-minFloat16 / 2 - 2 ** -25) === -minFloat16 );\n    });\n\n    it(\"return 1.3369140625 when value is 1.337\", () => {\n        assert( hfround(1.337) === 1.3369140625 );\n    });\n});\n\n})();\n"
  ]
}